{"changed":true,"filter":false,"title":"index.js","tooltip":"/routes/index.js","value":"var express = require(\"express\");\nvar router  = express.Router();\nvar passport = require(\"passport\");\nvar User = require(\"../models/user\");\nvar flash = require(\"connect-flash\");\n//root route\nrouter.get(\"/\", function(req, res){\n    console.log(\"here\")\n    //res.render(\"pages/landing\");\n});\nrouter.get(\"/profile\",function(req, res) {\n    res.render(\"users/profile\");\n})\n\nrouter.get(\"/coderoom\",function(req, res) {\n    console.log(\"here\");\n    res.render(\"coderoom\");\n})\n\n// show register form\nrouter.get(\"/register\", function(req, res){\n   res.render(\"register\"); \n});\n\n//handle sign up logic\nrouter.post(\"/register\", function(req, res){\n    var newUser = new User({username: req.body.username});\n    if(req.body.isAdmin == \"secret123\"){\n        newUser.isAdmin = true;\n    }\n    req.flash(\"success\",\"welcome\");\n    console.log(req.body);\n\n    User.register(newUser, req.body.password, function(err, user){\n        if(err){\n            console.log(err);\n            req.flash()[\"error\", err.message];\n            return res.render(\"register\");\n        }\n        passport.authenticate(\"local\")(req, res, function(){\n           req.flash()[\"success\", \"Successfully Signed Up! Nice to meet you \" + req.body.username];\n           res.redirect(\"/coderooms\"); \n        });\n    });\n});\n\n\n//show login form\nrouter.get(\"/login\", function(req, res){\n    \n   res.render(\"login\"); \n});\n\n//handling login logic\nrouter.post(\"/login\", passport.authenticate(\"local\", \n    {\n        successRedirect: \"/\",\n        failureRedirect: \"/login\"\n    }), function(req, res){\n        \n});\n\n// logout route\nrouter.get(\"/logout\", function(req, res){\n   req.logout();\n   req.flash(\"success\", \"LOGGED YOU OUT!\");\n   res.redirect(\"/campgrounds\");\n});\n\n//get profile\nrouter.get(\"/users/:id\",function(req, res) {\n    User.findById(req.params.id, function(err,foundUser){\n        if(err){\n            req.flash(\"error\",\"something went wrong\");\n            req.redirect(\"/\");\n        }\n        else{\n            res.render(\"users/profile\",{user:foundUser});\n        }\n    })\n})\n\n//update profile\nrouter.put(\"/users/:id\",function(req,res){\n    var newData ={nickname: req.body.nickname, country: req.body.region, mobile: req.body.mobile};\n    User.findByIdAndUpdate(req.params.id,{$set: newData},function(err,user){\n        if(err){\n            req.flash(\"error\",err.message);\n            res.redirect(\"back\");\n        }\n        else{\n            req.flash(\"success\",\"successfully updated!!\");\n            console.log(\"you made it!\");\n            console.log(user);\n            res.redirect(\"/users/\" + user._id);\n        }\n    })\n})\n\nmodule.exports = router;","undoManager":{"mark":-2,"position":1,"stack":[[{"start":{"row":11,"column":32},"end":{"row":11,"column":33},"action":"insert","lines":[","],"id":162},{"start":{"row":11,"column":33},"end":{"row":11,"column":34},"action":"insert","lines":[","]}],[{"start":{"row":11,"column":33},"end":{"row":11,"column":34},"action":"remove","lines":[","],"id":163},{"start":{"row":11,"column":32},"end":{"row":11,"column":33},"action":"remove","lines":[","]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":0},"end":{"row":13,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1536551997836}